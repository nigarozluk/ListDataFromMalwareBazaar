using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Project.Business.Functions.Account;
using Project.Core.Library.Functions;
using Project.Database.Entities;
using Project.Database.Repository.Abstract;
using Project.Database.ViewModel;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Web.UI.Library.Filters;

namespace Web.UI.Controllers
{
    public class AccountController : Controller
    {
        private ILogicService logic;
        private readonly CookieData cookie;
       
        public AccountController(ILogicService _logic, CookieData cookie)
        {
            logic = _logic;
            this.cookie = cookie;
        }
        public IActionResult Index()
        {
            return View();
        }
        public IActionResult Login(LoginViewModel entity)
        {
            User user = logic.Users.GetUser(entity);

            if (user == null)
            {
                TempData["msg"] = "User Not Exist!";
                return RedirectToAction("Index", "Account");
            }

            
            HttpContext.Session.SetSession("UserSession", user);


            // Check Remember
            if (entity.RememberLogin)
            {
               string cookieValue=cookie.CreateCookie(user);
                logic.Users.UpdateCookie(cookieValue,user);
            }

            return RedirectToAction("Index", "HashData");
        }
        public IActionResult Logout()
        {
            // Delete session
            int? userID = HttpContext.Session.GetSession<User>("UserSession")?.Id;
            HttpContext.Session.Remove("UserSession");

            // Delete cookie
            HttpContext.Response.Cookies.Append("UserCookie", "", new CookieOptions
            {
                Expires = DateTime.Now
            });

            //Update customer entity
           var user = logic.Users.GetById(userID ?? 0);
            if (user != null)
            {
                logic.Users.DeleteCookie(userID);
               
            }

            return RedirectToAction(actionName: "Index", controllerName: "Account");
        }
    }
}
